# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.

GPRE=		source/interbase/bin/gpre$(EXEC_EXT)
GPRE_FLAGS=	-r -m -z -n

DSQL_OBJECTS=	alld.o array.o blob.o ddl.o dsql.o \
	errd.o gen.o hsh.o make.o metd.o \
	movd.o parse.o pass1.o preparse.o \
	user_dsql.o utld.o
DSQL_P_OBJECTS=	alld.bin array.bin blob.bin ddl.bin dsql.bin \
	errd.bin gen.bin hsh.bin make.bin metd.bin \
	movd.bin parse.bin pass1.bin preparse.bin \
	user_dsql.bin utld.bin
DSQL_J_OBJECTS=	array.j blob.j preparse.j user_dsql.j utld.j

# Files which going to the super client library are :
DSQL_CLIENT_P_OBJECTS=	array.bin blob.bin preparse.bin user_dsql.bin utld.bin

objects:	dsql_objects $(DSQL_P_OBJS) dsql_$(SPECIAL_OBJECTS)_objects

dsql_objects:	$(DSQL_OBJECTS)
	-$(RM) dsql_objects
	$(TOUCH) dsql_objects
	$(CHMOD_6) dsql_objects

dsql_p_objects:	$(DSQL_P_OBJECTS)
	-$(RM) dsql_p_objects
	$(TOUCH) dsql_p_objects
	$(CHMOD_6) dsql_p_objects

dsql__objects:
	-$(RM) dsql__objects
	$(TOUCH) dsql__objects
	$(CHMOD_6) dsql__objects

dsql_j_objects:	$(DSQL_J_OBJECTS)
	-$(RM) dsql_j_objects
	$(TOUCH) dsql_j_objects
	$(CHMOD_6) dsql_j_objects

super_client_objects:	$(DSQL_CLIENT_P_OBJECTS)
	-$(RM) super_client_objects
	$(TOUCH) super_client_objects
	$(CHMOD_6) super_client_objects

dsqllib:	$(DSQL_OBJECTS)
	-$(RM) dsqllib
	/com/bind <bind_dsql
	$(MV) dsqllib source/interbase/lib/dsqllib
	$(TOUCH) dsqllib
	$(CHMOD_7) dsqllib

all.h:		dsql.h
	$(TOUCH) all.h
alld.o:		alld.c dsql.h node.h sym.h  blk.h \
		alld_proto.h errd_proto.h \
		source/jrd/gds_proto.h source/jrd/thd_proto.h \
		source/jrd/gdsassert.h
array.o:	array.c array_proto.h source/jrd/gds_proto.h
array.c:	array.e
blob.o:		blob.c blob_proto.h \
		source/jrd/intl.h source/jrd/constants.h
blob.c:		blob.e
ddl.o:		ddl.c dsql.h node.h source/jrd/thd.h source/jrd/intl.h \
		source/jrd/flags.h source/jrd/constants.h \
		source/jrd/ibsetjmp.h \
		alld_proto.h errd_proto.h ddl_proto.h gen_proto.h \
		make_proto.h metd_proto.h pass1_proto.h \
		source/jrd/thd_proto.h
dsql.h:		blk.h \
		source/jrd/ibsetjmp.h source/jrd/dsc.h source/jrd/thd.h
	$(TOUCH) dsql.h
dsql.o:		dsql.c dsql.h node.h sym.h \
		source/jrd/thd.h source/jrd/align.h sqlda.h \
		source/jrd/intl.h source/jrd/ibsetjmp.h \
		alld_proto.h ddl_proto.h dsql_proto.h errd_proto.h \
		gen_proto.h hsh_proto.h make_proto.h movd_proto.h \
		parse_proto.h pass1_proto.h \
		source/jrd/gds_proto.h source/jrd/thd_proto.h
errd.o:		errd.c dsql.h source/jrd/ibsetjmp.h \
		source/jrd/gds_proto.h source/jrd/thd_proto.h \
		errd_proto.h 
gen.o:		gen.c dsql.h node.h sym.h \
		source/jrd/align.h source/jrd/intl.h \
		alld_proto.h ddl_proto.h errd_proto.h gen_proto.h \
		make_proto.h metd_proto.h
hsh.o:		hsh.c dsql.h sym.h \
		alld_proto.h errd_proto.h hsh_proto.h
make.o:		make.c dsql.h node.h sym.h source/jrd/intl.h \
		source/jrd/constants.h \
		alld_proto.h errd_proto.h hsh_proto.h make_proto.h \
		source/jrd/dsc_proto.h
make_proto.h:	sym.h
	$(TOUCH) make_proto.h
metd.c:		metd.e 
metd.o:		metd.c dsql.h node.h sym.h \
		alld_proto.h ddl_proto.h metd_proto.h hsh_proto.h \
		make_proto.h\
		source/jrd/align.h  source/jrd/intl.h \
		source/jrd/thd_proto.h
movd.o:		movd.c dsql.h \
		errd_proto.h movd_proto.h source/jrd/cvt_proto.h
parse.c:	parse.y parse.sed
	$(YACC) -l $(YFLAGS) $<
# replace the above line with the following three for FLINTSTONE
#	awk -f parse.awk FLINTSTONE=1 < $< > tmp.$<
#	$(YACC) -l $(YFLAGS) tmp.$<
#	-$(RM) tmp.$<
	sed -f parse.sed y.tab.c > $@
	-$(RM) y.tab.c
parse.o:	parse.c dsql.h keywords.h node.h sym.h chars.h \
		alld_proto.h errd_proto.h hsh_proto.h make_proto.h \
		parse_proto.h \
		source/jrd/flags.h source/wal/wal.h \
		source/jrd/gds_proto.h source/jrd/thd_proto.h
pass1.o:	pass1.c dsql.h node.h sym.h \
		alld_proto.h ddl_proto.h errd_proto.h hsh_proto.h \
		make_proto.h metd_proto.h pass1_proto.h \
		source/jrd/thd.h  source/jrd/intl.h \
		source/jrd/dsc_proto.h
	$(SPECIAL_OPT) $(COPT_DSQL_PASS1) \
	$(CC) -c $(CFLAGS) $(VERSION_FLAG) pass1.c
preparse.o:	preparse.c chars.h prepa_proto.h source/jrd/gds_proto.h
user_dsql.o:	user_dsql.c dsql.h chars.h sqlda.h user__proto.h \
		source/jrd/blr.h source/jrd/inf.h source/jrd/align.h \
		source/jrd/gds_proto.h source/jrd/ibsetjmp.h
utld.o:		utld.c dsql.h sqlda.h utld_proto.h \
		source/jrd/blr.h source/jrd/align.h source/jrd/gds_proto.h

$(GDSSHR) $(GDSLIB):
	$(SH) '$(CD) source/jrd; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'

pass1.bin:	
	$(CP) pass1.c pass1foo.c
	$(SPECIAL_OPT) $(COPT_DSQL_PASS1) \
	$(CC) -c $(PIC_FLAGS) $(VERSION_FLAG) pass1foo.c
	$(MV) pass1foo.o pass1.bin
	-$(RM) pass1foo.c pass1foo.o

# .j objects are a special compilation for SOLARIS
array.j:	array.o
blob.j:		blob.o
preparse.j:	preparse.o
user_dsql.j:	user_dsql.o
utld.j:		utld.o

# This entry is used to programatically update the include file dependencies 
# for all *.c files in the current directory.
#
# Note that it is specific to Solaris by using the -xM1 compiler option.
# This option has CC generate dependency lines for the makefile - but
# does not generate object files.
# It is likely that a similar option exists on other platforms.
#
# It is recommended that depends.mak be created on a platform
# that supports such an option.  depends.mak is not platform dependent, it uses
# the standard makefile output format, as can be copied to platforms
# that don't have a -xM1 feature in the c compiler.
#
depends.mak: 
	-$(RM) depends.out
	-$(CC) $(CFLAGS) -xM1 *.c 1>&2 > depends.out
	-$(RM) depends.mak
	$(ECHO) "# depends.mak - dsql"                           > depends.mak
	$(ECHO) "# Created by 'make depends.mak'"               >> depends.mak
	date "+# Created on %Y-%m-%d"                           >> depends.mak
	sed -e "s:source/[a-z/]*/source:source:g" -e "s:source/dsql/::g"\
		depends.out |sort|uniq > depends.out.1
	-$(CAT) depends.out.1 >> depends.mak
	sed -e "s:\.o\::\.bin\::g" depends.out.1 >> depends.mak
	-$(RM) depends.out depends.out.1

# In the event that a platform does not support the make directive "include" - 
# concatenate "depends.mak" with the makefile.
#
include depends.mak

