# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.

GPRE=		source/interbase/bin/gpre$(EXEC_EXT)
GPRE_FLAGS=	-r -m -z -n
GJRN=		source/interbase/bin/gjrn$(EXEC_EXT)
GDS_ARCHIVE=	source/interbase/bin/gds_archive$(EXEC_EXT)
GDEF=		source/interbase/bin/gdef$(EXEC_EXT)

IBERR_LINK=	source/jrd/iberr.o
ISC_LINK=	source/jrd/isc.o
ISC_FILE_LINK=	source/jrd/isc_file.o
ISC_SYNC_LINK=	source/jrd/isc_sync.o
MISC_LINK=	source/jrd/misc.o
WALF_LINK=	source/wal/walf.o
WALR_LINK=	source/wal/walr.o
LLIO_LINK=	source/jrd/llio.o
JRN_LINK=	source/jrd/jrn.o

JRD_OBJECTS=	$(IBERR_LINK) $(ISC_LINK) $(ISC_FILE_LINK) $(ISC_SYNC_LINK) \
		$(MISC_LINK)
WAL_OBJECTS=	$(WALF_LINK) $(WALR_LINK) $(LLIO_LINK)

GJRN_OBJECTS=	gjrn.o console.o misc.o oldr.o rebuild.o server.o

all:		gjrn$(EXEC_EXT) gds_archive$(EXEC_EXT)

gjrn:		$(GJRN_OBJECTS) $(JRD_OBJECTS) $(WAL_OBJECTS) $(GDSSHR)
	-$(RM) gjrn
	$(CC) $(LINK_OPTS) $(GJRN_OBJECTS) \
		$(T_SWITCH) $(IBERR_LINK) \
		$(T_SWITCH) $(MISC_LINK) \
		$(T_SWITCH) $(WALF_LINK) \
		$(T_SWITCH) $(WALR_LINK) \
		$(T_SWITCH) $(LLIO_LINK) \
		$(T_SWITCH) $(ISC_LINK) \
		$(T_SWITCH) $(ISC_FILE_LINK) \
		$(T_SWITCH) $(ISC_SYNC_LINK) \
		-o gjrn $(GDSSHR_LINK) $(SO_NETWORK_LIB) $(SO_SOCKET_LIB)
	$(CHMOD_7) gjrn
	$(MV) gjrn $(GJRN)
	$(TOUCH) gjrn
	$(CHMOD_6) gjrn

gjrn.exe:	$(GJRN_OBJECTS) $(JRD_OBJECTS) $(WAL_OBJECTS)
	-$(RM) gjrn.exe journal.rsp
	$(ECHO) $(GJRN_OBJECTS) $(JRD_OBJECTS) $(WAL_OBJECTS) > journal.rsp
	$(CC) $(LINK_OPTS) $(O_EXE_SWITCH)gjrn \
		@journal.rsp $(GDSSHR_LINK) $(ADVAPILIB) $(MPRLIB)
	$(MV) gjrn.exe $(GJRN)
	$(RM) gjrn.exe journal.rsp
	$(TOUCH) gjrn.exe

gds_archive:	archive.o $(IBERR_LINK) $(LLIO_LINK) $(JRN_LINK) $(GDSSHR)
	-$(RM) gds_archive
	$(CC) $(LINK_OPTS) archive.o \
		$(T_SWITCH) $(IBERR_LINK) \
		$(T_SWITCH) $(JRN_LINK) \
		$(T_SWITCH) $(LLIO_LINK) \
		-o gds_archive $(GDSSHR_LINK) $(SO_NETWORK_LIB) $(SO_SOCKET_LIB)
	$(CHMOD_7) gds_archive
	$(MV) gds_archive $(GDS_ARCHIVE)
	$(TOUCH) gds_archive
	$(CHMOD_6) gds_archive

gds_archive.exe: archive.o $(IBERR_LINK) $(LLIO_LINK) $(JRN_LINK)
	-$(RM) gds_archive.exe
	$(CC) $(LINK_OPTS) $(O_EXE_SWITCH)gds_archive \
		archive.o $(IBERR_LINK) $(LLIO_LINK) $(JRN_LINK) $(GDSSHR_LINK)
	$(MV) gds_archive.exe $(GDS_ARCHIVE)
	$(RM) gds_archive.exe
	$(TOUCH) gds_archive.exe

journal.db: $(GDEF) force
	$(GDEF) -z -e $(JRNDIR)journal.gdb source/journal.gdl

debug:		$(GJRN_OBJECTS) archive.o $(GDSLIB)
	$(CC) $(LINK_OPTS) -g $(GJRN_OBJECTS) -o gjrn_dbg $(GDSLIB_LINK)
	$(CC) $(LINK_OPTS) -g archive.o -o archive_dbg $(GDSLIB_LINK)

debug_nt:	$(GJRN_OBJECTS) archive.o
	$(CC) $(DEBUG_LINK_OPTS) $(O_EXE_SWITCH)gjrn_dbg $(GJRN_OBJECTS) $(GDSLIB_LINK)
	$(CC) $(DEBUG_LINK_OPTS) $(O_EXE_SWITCH)archive_dbg archive.o $(GDSLIB_LINK)

force:
	$(ECHO) force

archive.o:	archive.c source/wal/wal.h source/jrd/jrn.h source/jrd/llio.h
console.o:	console.c journal.h \
		conso_proto.h gjrn_proto.h misc_proto.h \
		source/jrd/jrd.h source/jrd/jrn.h source/jrd/isc_f_proto.h
gjrn.o:		gjrn.c journal.h \
		conso_proto.h gjrn_proto.h misc_proto.h \
		rebui_proto.h serve_proto.h \
		source/jrd/license.h source/jrd/gds_proto.h
misc.o:		misc.c journal.h \
		gjrn_proto.h misc_proto.h \
		source/jrd/ods.h source/jrd/license.h \
		source/jrd/jrn.h source/jrd/gds_proto.h
oldr.o:		oldr.c \
		misc_proto.h oldr_proto.h \
		source/jrd/old.h source/jrd/llio.h \
		source/jrd/llio_proto.h
rebuild.c:	rebuild.e
rebuild.o:	rebuild.c journal.h \
		conso_proto.h gjrn_proto.h misc_proto.h oldr_proto.h \
		rebui_proto.h \
		source/jrd/ods.h source/jrd/old.h \
		source/jrd/jrn.h source/jrd/thd.h source/jrd/pio.h \
		source/jrd/dsc.h source/jrd/btr.h \
		source/wal/wal.h source/jrd/btr.h source/jrd/license.h \
		source/jrd/gds_proto.h source/jrd/isc_f_proto.h \
		source/jrd/llio_proto.h  source/wal/walr_proto.h
server.c:	server.e
server.o:	server.c journal.h \
		conso_proto.h gjrn_proto.h misc_proto.h serve_proto.h \
		source/jrd/jrn.h source/jrd/license.h \
		source/jrd/thd.h source/jrd/isc.h source/jrd/llio.h \
		source/jrd/pio.h \
		source/jrd/gds_proto.h source/jrd/isc_proto.h \
		source/jrd/isc_f_proto.h source/jrd/llio_proto.h \
		source/wal/wal.h source/wal/walf_proto.h

$(GDSSHR) $(GDSLIB) $(JRD_OBJECTS):
	$(SH) '$(CD) source/jrd; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'
$(WAL_OBJECTS):
	$(SH) '$(CD) source/wal; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'

# This entry is used to programatically update the include file dependencies 
# for all *.c files in the current directory.
#
# Note that it is specific to Solaris by using the -xM1 compiler option.
# This option has CC generate dependency lines for the makefile - but
# does not generate object files.
# It is likely that a similar option exists on other platforms.
#
# It is recommended that depends.mak be created on a platform
# that supports such an option.  depends.mak is not platform dependent, it uses
# the standard makefile output format, as can be copied to platforms
# that don't have a -xM1 feature in the c compiler.
#
depends.mak:
	-$(RM) depends.out
	-$(CC) $(CFLAGS) -xM1 *.c 1>&2 > depends.out
	-$(RM) depends.mak
	$(ECHO) "# depends.mak - journal"                       > depends.mak
	$(ECHO) "# Created by 'make depends.mak'"               >> depends.mak
	date "+# Created on %Y-%m-%d"                           >> depends.mak
	sed -e "s:source/[a-z/]*/source:source:g" -e "s:source/journal/::g"\
		depends.out |sort|uniq >> depends.mak
	-$(RM) depends.out

# In the event that a platform does not support the make directive "include" - 
# concatenate "depends.mak" with the makefile.
#
include depends.mak

