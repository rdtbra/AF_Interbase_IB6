# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.

GPRE=		source/interbase/bin/gpre$(EXEC_EXT)
DUDLEY=		source/interbase/bin/gdef$(EXEC_EXT)
GPRE_FLAGS=	-r -m -z -n

# If you add any more Objects from other components in this makefile,
# please create an action rule for the object below. 
# For eg: see the rule for $(JRD_LINK)
ISC_LINK=	source/jrd/isc.o 
JRD_LINK=	source/jrd/isc_file.o source/jrd/llio.o source/jrd/misc.o source/jrd/iberr.o
GPRE_LINK=	source/gpre/pretty.o
WALF_LINK=	source/wal/walf.o

DUDLEY_OBJECTS=	ddl.o exe.o expand.o expr.o extract.o generate.o \
	hsh.o lex.o parse.o trn.o

DDL_LINK_OBJECTS= $(DUDLEY_OBJECTS) $(ISC_LINK) $(JRD_LINK) $(GPRE_LINK) \
	$(WALF_LINK)

all:		dudley$(EXEC_EXT)

dudley:		ddllib.a $(DDL_LINK_OBJECTS) $(GDSSHR)
	-$(RM) dudley
	$(CC) $(LINK_OPTS) $(DUDLEY_OBJECTS) \
		$(T_SWITCH) $(ISC_LINK) \
		$(T_SWITCH) $(JRD_LINK) \
		$(T_SWITCH) $(WALF_LINK) \
		$(GPRE_LINK) -o dudley $(GDSSHR_LINK)
	$(CHMOD_7) dudley
	$(MV) dudley $(DUDLEY)
	$(TOUCH) dudley
	$(CHMOD_6) dudley

dudley.exe:	ddllib.lib $(DDL_LINK_OBJECTS)
	-$(RM) dudley.exe dudley.rsp
	$(ECHO) $(DUDLEY_OBJECTS) > dudley.rsp
	$(ECHO) $(JRD_LINK) $(GPRE_LINK) $(WALF_LINK) \
		>> dudley.rsp
	$(CC) $(LINK_OPTS) $(O_EXE_SWITCH)dudley \
		@dudley.rsp $(GDSSHR_LINK) $(ADVAPILIB) $(MPRLIB)
	$(MV) dudley.exe $(DUDLEY)
	$(RM) dudley.exe dudley.rsp
	$(TOUCH) dudley.exe

ddllib.a:	$(DUDLEY_OBJECTS)
	-rm -f ddllib.a
	$(AR) ddllib.a $(DUDLEY_OBJECTS)
	-ranlib ddllib.a

ddllib.lib:	$(DUDLEY_OBJECTS)
	-$(RM) ddllib.lib
	$(IMPLIB) -out:ddllib.lib $(DUDLEY_OBJECTS)
	$(TOUCH) ddllib.lib

debug:		$(DUDLEY_OBJECTS) $(GPRE_LINK) $(GDSLIB)
	$(CC) $(LINK_OPTS) -g $(DUDLEY_OBJECTS) $(GPRE_LINK) -o dudley_dbg $(GDSLIB_LINK)

debug_nt:	$(DUDLEY_OBJECTS) $(GPRE_LINK)
	$(CC) $(DEBUG_LINK_OPTS) $(O_EXE_SWITCH)dudley_dbg $(DUDLEY_OBJECTS) $(GPRE_LINK) $(GDSLIB_LINK)

ddl.h:		source/jrd/dsc.h
	$(TOUCH) ddl.h
ddl.o:		ddl.c ddl.h \
		ddl_proto.h exe_proto.h expan_proto.h extra_proto.h \
		hsh_proto.h lex_proto.h parse_proto.h trn_proto.h \
		source/jrd/license.h source/jrd/gds_proto.h
exe.c:		exe.e
exe.o:		exe.c ddl.h \
		ddl_proto.h exe_proto.h gener_proto.h hsh_proto.h \
		lex_proto.h \
		source/jrd/license.h source/jrd/flags.h \
		source/jrd/acl.h source/jrd/intl.h source/jrd/obj.h \
		source/jrd/gds_proto.h source/jrd/isc_f_proto.h \
		source/wal/walf_proto.h
	$(SPECIAL_OPT) $(COPT_DUDLEY_EXE) \
	$(CC) -c $(CFLAGS) $(VERSION_FLAG) exe.c
expand.o:	expand.c ddl.h parse.h \
		expan_proto.h ddl_proto.h hsh_proto.h parse_proto.h \
		source/jrd/gds_proto.h 
expr.o:		expr.c ddl.h parse.h source/jrd/acl.h source/jrd/intl.h \
		ddl_proto.h expr_proto.h lex_proto.h parse_proto.h 
extract.c:	extract.e
extract.o:	extract.c ddl.h \
		ddl_proto.h extra_proto.h \
		source/jrd/acl.h source/jrd/flags.h \
		source/jrd/obj.h source/jrd/gds_proto.h  source/wal/wal.h
generate.o:	generate.c ddl.h \
		ddl_proto.h gener_proto.h trn_proto.h \
		source/jrd/acl.h source/jrd/gds_proto.h
hsh.o:		hsh.c ddl.h parse.h \
		ddl_proto.h hsh_proto.h
lex.o:		lex.c ddl.h parse.h \
		ddl_proto.h hsh_proto.h lex_proto.h \
		source/jrd/gds_proto.h
parse.o:	parse.c ddl.h parse.h \
		exe_proto.h expr_proto.h hsh_proto.h lex_proto.h \
		parse_proto.h \
		source/jrd/acl.h source/jrd/flags.h \
		source/wal/wal.h source/jrd/isc_f_proto.h
	$(SPECIAL_OPT) $(COPT_DUDLEY_PARSE) \
	$(CC) -c $(CFLAGS) $(VERSION_FLAG) parse.c
trn.o:		trn.c ddl.h \
		gener_proto.h lex_proto.h trn_proto.h \
		source/jrd/license.h source/jrd/gds_proto.h \
		source/jrd/gdsassert.h \
		source/gpre/prett_proto.h

$(GDSSHR) $(GDSLIB) $(JRD_LINK) $(ISC_LINK):
	$(SH) '$(CD) source/jrd; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'
$(GPRE_LINK):
	$(SH) '$(CD) source/gpre; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'

$(WALF_LINK):
	$(SH) '$(CD) source/wal; $(MAKE) CFLAGS="$(CFLAGS)" SYSTEM="$(SYSTEM)" $(@F)'

# This entry is used to programatically update the include file dependencies 
# for all *.c files in the current directory.
#
# Note that it is specific to Solaris by using the -xM1 compiler option.
# This option has CC generate dependency lines for the makefile - but
# does not generate object files.
# It is likely that a similar option exists on other platforms.
#
# It is recommended that depends.mak be created on a platform
# that supports such an option.  depends.mak is not platform dependent, it uses
# the standard makefile output format, as can be copied to platforms
# that don't have a -xM1 feature in the c compiler.
#
depends.mak:
	-$(RM) depends.out
	-$(CC) $(CFLAGS) -xM1 *.c 1>&2 > depends.out
	-$(RM) depends.mak
	$(ECHO) "# depends.mak - dudley"                           > depends.mak
	$(ECHO) "# Created by 'make depends.mak'"               >> depends.mak
	date "+# Created on %Y-%m-%d"                           >> depends.mak
	sed -e "s:source/[a-z/]*/source:source:g" -e "s:source/dudley/::g"\
		depends.out |sort|uniq >> depends.mak
	-$(RM) depends.out

# In the event that a platform does not support the make directive "include" - 
# concatenate "depends.mak" with the makefile.
#
include depends.mak

