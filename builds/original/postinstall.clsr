# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.
ExitError()
{
echo "\n*** Install completed with errors ***" | tee -a $TmpLogFile
echo "Install log can be found at $TmpLogFile"
exit 1
}

ExitSuccess()
{
echo "\nInstall completed successfully" | tee -a $INTERBASE/$LogFile
echo "Install log can be found at $INTERBASE/$LogFile"
exit 0
}

Quit()
{
echo "\nInstall is not complete." | tee -a $TmpLogFile
echo "You may run the install at a later time to complete the installation." | tee -a $TmpLogFile
echo "Install log can be found at $TmpLogFile"
exit 2
}

echo TmpLogFile=$TmpLogFile
echo LogFile=$LogFile
echo INTERBASE=$INTERBASE
echo SUPERSERVER=$SUPERSERVER
echo IBSymLink=$IBSymLink
echo IBINSTALL=$IBINSTALL
#
# Make sure the top level ($INTERBASE) is 777
#
echo "Updating access permissions... \c"
echo "Updating access permissions" >> $TmpLogFile
chmod 777 $INTERBASE
echo "chmod 777 $INTERBASE" >> $TmpLogFile

#
# Protect security, examples and QLI help databases
#
if [ "$SUPERSERVER" ]; then
    chmod uog=rw $INTERBASE/isc4.gdb
    chmod uog=rw $INTERBASE/examples/database/employee.gdb
    chmod uog=rw $INTERBASE/examples/database/intlemp.gdb
    chmod 4755 $INTERBASE/bin/gstat
    echo "chmod uog=rw $INTERBASE/isc4.gdb" >> $TmpLogFile
    echo "chmod uog=rw $INTERBASE/examples/database/employee.gdb" >> $TmpLogFile
    echo "chmod uog=rw $INTERBASE/examples/database/intlemp.gdb" >> $TmpLogFile
    echo "chmod 4755 $INTERBASE/bin/gstat" >> $TmpLogFile

fi
echo "Done"
echo "----------------------------\n" >> $TmpLogFile


#
# Create the symbolic links
#
echo "Creating symbolic links... \c"
echo "Creating symbolic links" >> $TmpLogFile

if [ -f $INTERBASE/include/gds.h ]; then
    rm -f /usr/include/gds.h
    echo "rm -f /usr/include/gds.h" >> $TmpLogFile
    ln -s $IBSymLink/include/gds.h /usr/include/gds.h
    echo "ln -s $IBSymLink/include/gds.h /usr/include/gds.h" >> $TmpLogFile
fi
if [ -f $INTERBASE/include/ibase.h ]; then
    rm -f /usr/include/ibase.h
    echo "rm -f /usr/include/ibase.h" >> $TmpLogFile
    ln -s $IBSymLink/include/ibase.h /usr/include/ibase.h
    echo "ln -s $IBSymLink/include/ibase.h /usr/include/ibase.h" >> $TmpLogFile
fi
if [ -f $INTERBASE/include/iberror.h ]; then
    rm -f /usr/include/iberror.h
    echo "rm -f /usr/include/iberror.h" >> $TmpLogFile
    ln -s $IBSymLink/include/iberror.h /usr/include/iberror.h
    echo "ln -s $IBSymLink/include/iberror.h /usr/include/iberror.h" >> $TmpLogFile
fi
if [ -f $INTERBASE/include/ib_util.h ]; then
    rm -f /usr/include/ib_util.h
    echo "rm -f /usr/include/ib_util.h" >> $TmpLogFile
    ln -s $IBSymLink/include/ib_util.h /usr/include/ib_util.h
    echo "ln -s $IBSymLink/include/ib_util.h /usr/include/ib_util.h" >> $TmpLogFile
fi

if [ -f $INTERBASE/lib/gds_s.a ]; then
    rm -f /usr/lib/libgds_s
    echo "rm -f /usr/lib/libgds_s" >> $TmpLogFile
    rm -f /usr/lib/libgds_s.a
    echo "rm -f /usr/lib/libgds_s.a" >> $TmpLogFile
    rm -f /usr/lib/libgdsf_s
    echo "rm -f /usr/lib/libgdsf_s" >> $TmpLogFile
    rm -f /usr/lib/libgdsf_s.a
    echo "rm -f /usr/lib/libgdsf_s.a" >> $TmpLogFile
    ln -s $IBSymLink/lib/gds_s /usr/lib/libgds_s
    echo "ln -s $IBSymLink/lib/gds_s /usr/lib/libgds_s" >> $TmpLogFile
    ln -s $IBSymLink/lib/gds_s.a /usr/lib/libgds_s.a
    echo "ln -s $IBSymLink/lib/gds_s.a /usr/lib/libgds_s.a" >> $TmpLogFile
    ln -s $IBSymLink/lib/gdsf_s /usr/lib/libgdsf_s
    echo "ln -s $IBSymLink/lib/gdsf_s /usr/lib/libgdsf_s" >> $TmpLogFile
    ln -s $IBSymLink/lib/gdsf_s.a /usr/lib/libgdsf_s.a
    echo "ln -s $IBSymLink/lib/gdsf_s.a /usr/lib/libgdsf_s.a" >> $TmpLogFile
fi
if [ -f $INTERBASE/lib/gds.so.0 ]; then
    if [ -d /usr/shlib ]; then
        rm -f /usr/shlib/libgds.so
	echo "rm -f /usr/shlib/libgds.so" >> $TmpLogFile
        rm -f /usr/shlib/libgds.so.0
	echo "rm -f /usr/shlib/libgds.so.0" >> $TmpLogFile
        ln -s $IBSymLink/lib/gds.so.0 /usr/shlib/libgds.so.0
	echo "ln -s $IBSymLink/lib/gds.so.0 /usr/shlib/libgds.so.0" >> $TmpLogFile
        ln -s /usr/shlib/libgds.so.0 /usr/shlib/libgds.so
	echo "ln -s /usr/shlib/libgds.so.0 /usr/shlib/libgds.so" >> $TmpLogFile
    else
        rm -f /usr/lib/libgds.so
	echo "rm -f /usr/lib/libgds.so" >> $TmpLogFile
        rm -f /usr/lib/libgds.so.0
	echo "rm -f /usr/lib/libgds.so.0" >> $TmpLogFile
        ln -s $IBSymLink/lib/gds.so.0 /usr/lib/libgds.so.0
	echo "ln -s $IBSymLink/lib/gds.so.0 /usr/lib/libgds.so.0" >> $TmpLogFile
        ln -s /usr/lib/libgds.so.0 /usr/lib/libgds.so
	echo "ln -s /usr/lib/libgds.so.0 /usr/lib/libgds.so" >> $TmpLogFile
    fi
fi
if [ -f $INTERBASE/lib/gdsmt.so.0 ]; then
    rm -f /usr/lib/libgdsmt.so
    echo "rm -f /usr/lib/libgdsmt.so" >> $TmpLogFile
    rm -f /usr/lib/libgdsmt.so.0
    echo "rm -f /usr/lib/libgdsmt.so.0" >> $TmpLogFile
    ln -s $IBSymLink/lib/gdsmt.so.0 /usr/lib/libgdsmt.so.0
    echo "ln -s $IBSymLink/lib/gdsmt.so.0 /usr/lib/libgdsmt.so.0" >> $TmpLogFile
    ln -s /usr/lib/libgdsmt.so.0 /usr/lib/libgdsmt.so
    echo "ln -s /usr/lib/libgdsmt.so.0 /usr/lib/libgdsmt.so" >> $TmpLogFile
fi
if [ -f $INTERBASE/lib/gdsf.so ]; then
    rm -f /usr/lib/libgdsf.so
    echo "rm -f /usr/lib/libgdsf.so" >> $TmpLogFile
    ln -s $IBSymLink/lib/gdsf.so /usr/lib/libgdsf.so
    echo "ln -s $IBSymLink/lib/gdsf.so /usr/lib/libgdsf.so" >> $TmpLogFile
fi
if [ -f $INTERBASE/lib/gds_pyxis.a ]; then
    rm -f /usr/lib/libgds_pyxis.a
    echo "rm -f /usr/lib/libgds_pyxis.a" >> $TmpLogFile
    ln -s $IBSymLink/lib/gds_pyxis.a /usr/lib/libgds_pyxis.a
    echo "ln -s $IBSymLink/lib/gds_pyxis.a /usr/lib/libgds_pyxis.a" >> $TmpLogFile
fi
if [ -f $INTERBASE/lib/ib_util.so ]; then
    rm -f /usr/lib/libib_util.so
    echo "rm -f /usr/lib/libib_util.so" >> $TmpLogFile
    ln -s $IBSymLink/lib/ib_util.so /usr/lib/libib_util.so
    echo "ln -s $IBSymLink/lib/ib_util.so /usr/lib/libib_util.so" >> $TmpLogFile
fi

echo "Done"
echo "----------------------------\n" >> $TmpLogFile

#
# If TCP is installed, update both services and servers databases
#
if [ "$SUPERSERVER" ]; then
    echo "Updating service name database... \c"
    echo "Updating service name database" >> $TmpLogFile
    if [ -f /etc/services ]; then
#       grep option -q is quiet mode
#	       -s Supress any output.
#	These options are available only on /usr/xpg4/bin/grep which
#	is available on solaris 2.5 and above.
#
	/usr/xpg4/bin/grep -q -s gds_db /etc/services  
	if test $? != 0 ; then
	    cat /etc/services $INTERBASE/services.isc > /tmp/ib-services
	    echo "cat /etc/services $INTERBASE/services.isc > /tmp/ib-services" >> $TmpLogFile
	    mv /tmp/ib-services /etc/services
	    echo "mv /tmp/ib-services /etc/services" >> $TmpLogFile
	fi
    fi
    echo "Done"
    echo "----------------------------\n" >> $TmpLogFile
    echo "Updating configuration file for inetd... \c"
    echo "Updating configuration file for inetd" >> $TmpLogFile
    if [ -f /etc/inetd.conf ]; then
	# Remove gds_db service. We do not want gds_inet_server to be invoked
	cat /etc/inetd.conf | grep -v gds_db > /tmp/ib-inetd.conf
	echo "cat /etc/inetd.conf | grep -v gds_db > /tmp/ib-inetd.conf" >> $TmpLogFile
	mv /tmp/ib-inetd.conf /etc/inetd.conf
	echo "mv /tmp/ib-inetd.conf /etc/inetd.conf" >> $TmpLogFile
    fi
    if [ -f /usr/etc/inetd.conf ]; then
	# Remove gds_db service. We do not want gds_inet_server to be invoked
	cat /usr/etc/inetd.conf | grep -v gds_db > /tmp/ib-inetd.conf
	echo "cat /usr/etc/inetd.conf | grep -v gds_db > /tmp/ib-inetd.conf" >> $TmpLogFile
	mv /tmp/ib-inetd.conf /usr/etc/inetd.conf
	echo "mv /tmp/ib-inetd.conf /usr/etc/inetd.conf" >> $TmpLogFile
    fi
    echo "Done"
    echo "----------------------------\n" >> $TmpLogFile
fi

#
# create the ibmgr shell script
#
if [ "$SUPERSERVER" ]; then
echo "Creating the ibmgr shell script... \c"
echo "Creating the ibmgr shell script" >> $TmpLogFile
cat > $INTERBASE/bin/ibmgr << EOF
#!/bin/sh
INTERBASE=$INTERBASE
export INTERBASE
exec $INTERBASE/bin/ibmgr.bin \$@
EOF

chmod +x $INTERBASE/bin/ibmgr
echo "Done"
echo "----------------------------\n" >> $TmpLogFile
fi

#
# Create the license file
#
if [ "$SUPERSERVER" ]; then
INTERBASE="$INTERBASE"; export INTERBASE
echo "Creating the license file" >> $TmpLogFile
echo "\nPlease enter the license certificate id: \c" | tee -a $TmpLogFile
read id
case "$id" in
  "eval" | "" )
      echo "Creating a 90-day evaluation license..." | tee -a $TmpLogFile
      $INTERBASE/bin/iblicense -eval
      chmod uog=r $INTERBASE/ib_license.dat
      ;;
  * )
      echo "Please enter the license certificate key: \c" | tee -a $TmpLogFile
      read key
      if [ -z "$key" ] ; then
	echo "We need the license key which matches your license id." | tee -a $TmpLogFile
	echo "Please enter the license certificate key: \c" | tee -a $TmpLogFile
	read key
      fi
      if [ ! -z "$key" ] ; then
	echo "Creating the license..." | tee -a $TmpLogFile
	$INTERBASE/bin/iblicense -add -id $id -key $key
	if [ $? -eq 0 ]; then
	    chmod uog=r $INTERBASE/ib_license.dat
	else
	    ExitError
	fi
      else
	echo "ERROR: No license created. Please see the release notes" | tee -a $TmpLogFile
        echo "       to create a license file." | tee -a $TmpLogFile
	ExitError
      fi
      ;;
esac
fi
#
# Create /usr/interbase symbolic link
#

if [ "$INTERBASE" != "$IBSymLink" ]; then
    echo "Creating /usr/interbase symbolic link... \c"
    echo "Creating /usr/interbase symbolic link" >> $TmpLogFile

    if [ -f "$IBSymLink" -o -d "$IBSymLink" -o -h "$IBSymLink" ]; then
	mv $IBSymLink ${IBSymLink}.$$
	echo "WARNING: Old \"$IBSymLink\" moved to \"${IBSymLink}.$$\"" | tee -a $TmpLogFile
    fi

    ln -s $INTERBASE $IBSymLink
    echo "ln -s $INTERBASE $IBSymLink" >> $TmpLogFile
    echo "Done"
    echo "----------------------------\n" >> $TmpLogFile
fi
#
# Move the log file to the $INTERBASE
#
if [ -f $INTERBASE/$LogFile ]; then
    cp $INTERBASE/$LogFile $INTERBASE/$LogFile.old
    echo "Old $INTERBASE/$LogFile moved to $INTERBASE/$LogFile.old" >> $TmpLogFile
fi
mv $TmpLogFile $INTERBASE/$LogFile
ExitSuccess
