TEST:	PROCEDURE OPTIONS (MAIN);
/*
 * The contents of this file are subject to the Interbase Public
 * License Version 1.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy
 * of the License at http://www.Inprise.com/IPL.html
 *
 * Software distributed under the License is distributed on an
 * "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code was created by Inprise Corporation
 * and its predecessors. Portions created by Inprise Corporation are
 * Copyright (C) Inprise Corporation.
 *
 * All Rights Reserved.
 * Contributor(s): ______________________________________.
 */

	/* CENSUS REPORT */

	/* Include the SQL Communications Area */
	EXEC SQL
		INCLUDE SQLCA

	/* Set up to catch SQL errors. Note: this will require that each
	   routine which contains executeable SQL commands to have an
	   error handling section labeled 'ERR'. */
	EXEC SQL
		WHENEVER SQLERROR GO TO ERR;

PRINT_ERROR: PROCEDURE;
	/* Print out error message */

	PUT LIST ('Data base error, SQLCODE = ', SQLCODE) SKIP;
	END PRINT_ERROR;

SETUP: PROCEDURE RETURNS (FIXED BINARY (15));
	/* Put in estimated data for missing 1960 & 1970 census data.
	   Return 1 if successful, 0 otherwise.  */

	/* Replace missing 1960 census data with estimates */

	EXEC SQL
		UPDATE POPULATIONS
		SET CENSUS_1960 = 0.3 * (CENSUS_1980 - CENSUS_1950)
		WHERE CENSUS_1960 IS NULL;

	/* Replace missing 1970 census data with estimates */

	EXEC SQL
		UPDATE POPULATIONS
		SET CENSUS_1970 = 0.65 * (CENSUS_1980 - CENSUS_1950)
		WHERE CENSUS_1970 IS NULL;

	RETURN (1);

	/* Error return */
ERR:	CALL PRINT_ERROR;
	RETURN (0);
	END SETUP;

CENSUS_REPORT: PROCEDURE;

	/* Declare variables to receive data retrieved by SQL commands */
	DECLARE (POP_50, POP_60, POP_70, POP_80) FIXED BINARY (31);
	DECLARE STNAME CHARACTER(25);

	/* Declare cursor for use in retrieving state/census data */
        EXEC SQL
		DECLARE C CURSOR FOR
		SELECT STATE_NAME, CENSUS_1950, CENSUS_1960,
			CENSUS_1970, CENSUS_1980
		FROM STATES S, POPULATIONS P
		WHERE S.STATE = P.STATE
		ORDER S.STATE_NAME;

	/* Open cursor for use in retrieving state/census data */
	EXEC SQL
		OPEN C;

	/* Print report header */
        PUT LIST ('	STATE			',
		'			POPULATION') SKIP;
	PUT LIST ('				    1950',
		'	    1960	    1970',
		'	    1980') SKIP (2);

	/* Retrieve first set of state/census data */
	EXEC SQL
		FETCH C INTO :STNAME, :POP_50, :POP_60, :POP_70, :POP_80;

	/* Until end of data stream is reached, print out current set
	   of data and then fetch next set */
	DO WHILE (SQLCODE = 0);
                PUT LIST (STNAME, '	', POP_50, '	',
			POP_60, '	', POP_70, '	', POP_80) SKIP;

		/* Retrieve next set of state/census data */
		EXEC SQL
			FETCH C INTO :STNAME, :POP_50, :POP_60,
				 :POP_70, :POP_80;
		END;

	/* Close cursor */
	EXEC SQL
		CLOSE C;

	RETURN;

	/* Error return */
ERR:	CALL PRINT_ERROR;
	RETURN;
	END CENSUS_REPORT;

	/* Set up estimated data; if successful then do report */
	IF (SETUP() = 1) THEN CALL CENSUS_REPORT();

	/* Undo estimated census data */
	EXEC SQL
		ROLLBACK;

	RETURN;


	/* Output error information */
ERR:	CALL PRINT_ERROR;
	END;

