# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
#
# All Rights Reserved.
# Contributor(s): ______________________________________.
# cs_c.mkf	Build C-language example of creating, defining, and calling 
#		UDF for character set conversion.

.SUFFIXES: .o .c .e .gdb .gdl .mkf .mk4

.gdl.gdb: ;	$(GDEF)	$<
.e.c: ;		$(GPRE) -e -m $<
.ea.a: ;	$(GPRE) -e -m $<
.eftn.ftn: ;	$(GPRE) -e -m $<
.epas.pas: ;	$(GPRE) -e -m $<
.c.o: ;		$(CC) -w -g -c $<
.o: ;		$(LINK) $< $(OPTGDS) $(OPTBIN) $@

# Apollo definitions
#
CFLAGS=	-dba -nwarn 
IBEXE=	$(INTERBASE)/com
INTERBASE=	source/interbase
LINK=	/com/bind -mergebss 
OPTGDS=	-inlib $(GDSLIB)
OPTBIN=	-b
EXAMPLES= $(INTERBASE)/intl

# common definitions
#
GDSLIB=	$(INTERBASE)/lib/gdslib
GBAK=	$(IBEXE)/gbak -z
GCON=	$(IBEXE)/gcon -z
GFIX=	$(IBEXE)/gfix -z
GDEF=	$(IBEXE)/gdef -z
GPRE=	$(IBEXE)/gpre -z
GRST=	$(IBEXE)/grst -z
QLI=	$(IBEXE)/qli -z

todo:	
	echo First do "make -f make.cs new" > todo
	echo Then  do "make -f make.cs gdslib" >> todo
	echo Then issue "inlib gdslib"      >> todo
	echo Then  do "make -f make.cs demo" >> todo

new :		
	cp $(EXAMPLES)/cs_convert.c .
	cp $(EXAMPLES)/437_to_865.h .
	cp $(EXAMPLES)/437_to_lat1.h .
	cp $(EXAMPLES)/865_to_lat1.h .
	cp $(EXAMPLES)/products.lat1 .
	cp $(EXAMPLES)/users.lat1 .
	cp $(EXAMPLES)/clients.437 .
	cp $(EXAMPLES)/contacts.437 .
	cp $(EXAMPLES)/cs_load.gdl .
	cp $(EXAMPLES)/cs_demo.gdl .
	cp $(EXAMPLES)/cs_load.qli .
	chmod 666 cs_convert.c *.gdl *.h *.437 *.lat1 *.qli
		
#	Build special gdslib that includes the udf.
#	Requires a virgin copy of gdslib, plus the udf itself.
#
gdslib:		cs_convert.o \
		$(INTERBASE)/lib/gdslib
	$(LINK) cs_convert.o $(OPTBIN) $@ \
		-mark c_convert_437_to_Latin1 -mark c_convert_Latin1_to_437 \
		-mark c_convert_437_to_865    -mark c_convert_865_to_437 \
		-mark c_convert_Latin1_to_865 -mark c_convert_865_to_Latin1 \
		-mark n_convert_437_to_Latin1 -mark n_convert_Latin1_to_437 \
		-mark n_convert_437_to_865    -mark n_convert_865_to_437 \
		-mark n_convert_Latin1_to_865 -mark n_convert_865_to_Latin1 

#	Build the udf object module for inclusion into special library.
#
cs_convert.o:	cs_convert.c 437_to_865.h 437_to_lat1.h 865_to_lat1.h
	cc -W0,-pic -W0,-natural -Tany -c -w cs_convert.c

demo:	cs_demo.gdb

cs_demo.gdb:	gdslib
#	If this step fails, you may needs to do "inlib gdslib"
	sed -e s:CONVERT_MODULE:`pwd`/$(FUNCLIB):g cs_demo.gdl | $(GDEF)
	$(GDEF) cs_load.gdl
	$(QLI) -a cs_load.qli

#	Clean up by deleting all files we created, except basic ingredients.
#
clean:
	-rm todo
	-rm cs_convert.c
	-rm 437_to_865.h 
	-rm 437_to_lat1.h 
	-rm 865_to_lat1.h 
	-rm cs_demo.gdl cs_demo.gdb
	-rm cs_load.gdl cs_load.gdb cs_load.qli
	-rm users.lat1 products.lat1
	-rm clients.437 contacts.437
	-rm $(FUNCLIB)
	-rm $(FUNCOBJ)
	-rm gdslib
